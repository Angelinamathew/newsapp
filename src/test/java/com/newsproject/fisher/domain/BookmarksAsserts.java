package com.newsproject.fisher.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BookmarksAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookmarksAllPropertiesEquals(Bookmarks expected, Bookmarks actual) {
        assertBookmarksAutoGeneratedPropertiesEquals(expected, actual);
        assertBookmarksAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookmarksAllUpdatablePropertiesEquals(Bookmarks expected, Bookmarks actual) {
        assertBookmarksUpdatableFieldsEquals(expected, actual);
        assertBookmarksUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookmarksAutoGeneratedPropertiesEquals(Bookmarks expected, Bookmarks actual) {
        assertThat(expected)
            .as("Verify Bookmarks auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookmarksUpdatableFieldsEquals(Bookmarks expected, Bookmarks actual) {
        assertThat(expected)
            .as("Verify Bookmarks relevant properties")
            .satisfies(e -> assertThat(e.getArticleId()).as("check articleId").isEqualTo(actual.getArticleId()))
            .satisfies(e -> assertThat(e.getUserId()).as("check userId").isEqualTo(actual.getUserId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookmarksUpdatableRelationshipsEquals(Bookmarks expected, Bookmarks actual) {}
}
